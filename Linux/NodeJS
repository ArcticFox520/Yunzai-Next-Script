#!/bin/env bash
source config

if CheckNetwork
then
  NodeVersion="https://nodejs.org/dist/latest-iron/"
else
  NodeVersion="https://nodejs.org/dist/latest-iron/"
fi

echo -e ${yellow}正在获取 ${cyan}NodeJS版本号${background}
until NodeVersion="$(curl ${NodeVersion} | grep .pkg | awk -F 'node-|\.pkg' '{print $2}')"
do
  echo -e ${cyan}获取失败 ${yellow}三秒后重试${background}
  sleep 3s
done

if CheckNetwork
then
  NodeJSURL="https://registry.npmmirror.com/-/binary/node/latest-iron/node-${NodeVersion}-linux-$(Arch).tar.xz"
  NPMMirror="https://registry.npmmirror.com"
else
  NodeJSURL="https://nodejs.org/dist/latest-iron/node-${NodeVersion}-linux-$(Arch).tar.gz"
  NPMMirror="https://registry.npmjs.org"
fi

if Download NodeJS.tar.xz ${NodeJSURL}
then
  echo -e ${yellow}正在解压 ${cyan}NodeJS.tar.xz${background}
else
  echo -e ${red}解压失败${background}
  ErrorReturn
fi
mkdir NodeJS
pv NodeJS.tar.xz | tar -Jxf - -C NodeJS
rm -rvf NodeJS.tar.xz
rm -rf /usr/local/NodeJS > /dev/null 2>&1
mv NodeJS/$(ls NodeJS) /usr/local/NodeJS
rm -rf NodeJS
echo '
#Node.JS
export PATH=$PATH:/usr/local/NodeJS/bin
' >> /etc/profile

echo -e ${yellow}正在设置NPM ${cyan}默认仓库${background}
npm config set registry ${NPMMirror}
npm config set registry ${NPMMirror}
npm install -g npm@latest
echo -e ${yellow}已设置为 ${cyan}npmmirror${background}

echo -e ${yellow}正在安装 ${cyan}YARN${background}
npm install -g yarn
echo -e ${yellow}正在设置PNPM ${cyan}默认仓库${background}
yarn config set registry ${NPMMirror}
yarn config set registry ${NPMMirror}
echo -e ${green}已设置为 ${yellow}npmmirror${background}

echo -e ${green}正在安装 ${yellow}PNM2${background}
until npm install -g pm2
do
  echo -e ${cyan}安装失败 ${yellow}三秒后重试${background}
  sleep 3s
done
echo -e ${green}安装完成${background}